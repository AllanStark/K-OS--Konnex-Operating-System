OIL_VERSION="2.5";

IMPLEMENTATION Standard {

	OS {
		ENUM [STANDARD, EXTENDED] STATUS;
		BOOLEAN STARTUPHOOK;
		BOOLEAN ERRORHOOK;
		BOOLEAN SHUTDOWNHOOK;
		BOOLEAN PRETASKHOOK;
		BOOLEAN POSTTASKHOOK;
		BOOLEAN USEGETSERVICEID;
		BOOLEAN USEPARAMETERACCESS;
		BOOLEAN USERESSCHEDULER = TRUE;

	        ENUM WITH_AUTO [BCC1,BCC2,ECC1,ECC2] CC;
        	UINT32 [32..128] IDLETASKSTACKSIZE=32;
	        BOOLEAN O1SCHEDULER=FALSE;
	};

	APPMODE {
	};

	TASK {
		BOOLEAN [
			TRUE {
				APPMODE_TYPE APPMODE[];
			},
			FALSE
		] AUTOSTART;
		UINT32 PRIORITY;
		UINT32 ACTIVATION;
		ENUM [NON, FULL] SCHEDULE;
		EVENT_TYPE EVENT[];
		RESOURCE_TYPE RESOURCE[];
		MESSAGE_TYPE MESSAGE[];

        	UINT32 [32..1024] STACKSIZE=32;        
        	ENUM [YES,NO,UNKNOWN] CALLSCHEDULE=UNKNOWN : "Non-preemptive tasks not calling 'Schedule()' can share a common stack.";
        /* todo: 'STACKFILL', wenn 'TRUE' dann 'FILLPATTERN' (DEFAULT=0x55aa) !!! */
        /* todo 'USEFLOATINGPOINT', um den FP-Context zu sichern!!! */

	};

	ISR {
		UINT32 [1, 2] CATEGORY;
		RESOURCE_TYPE RESOURCE[];
		MESSAGE_TYPE MESSAGE[];
	};

	COUNTER {
		UINT32 MINCYCLE;
		UINT32 MAXALLOWEDVALUE;
		UINT32 TICKSPERBASE;
	};

	ALARM {
		COUNTER_TYPE COUNTER;
		ENUM [
			ACTIVATETASK {
				TASK_TYPE TASK;
			},
			SETEVENT {
				TASK_TYPE TASK;
				EVENT_TYPE EVENT;
			},
			ALARMCALLBACK {
				STRING ALARMCALLBACKNAME;
			}
		] ACTION;
		BOOLEAN [
			TRUE {
				UINT32 ALARMTIME;
				UINT32 CYCLETIME;
				APPMODE_TYPE APPMODE[];
			},
			FALSE
		] AUTOSTART;
	};

	EVENT {
		UINT64 WITH_AUTO MASK;
	};
	
	RESOURCE {
		ENUM [
			STANDARD,
			LINKED {
				RESOURCE_TYPE LINKEDRESOURCE;
			},
			INTERNAL
		] RESOURCEPROPERTY;
	};

	MESSAGE {
		ENUM [
			SEND_STATIC_INTERNAL {
				STRING CDATATYPE;
			},
			RECEIVE_UNQUEUED_INTERNAL {
				MESSAGE_TYPE SENDINGMESSAGE;
				UINT64 INITIALVALUE = 0;
			},
			RECEIVE_QUEUED_INTERNAL {
				MESSAGE_TYPE SENDINGMESSAGE;
				UINT32 QUEUESIZE;
			}
		] MESSAGEPROPERTY;
		ENUM [
			NONE,
			ACTIVATETASK {
				TASK_TYPE TASK;
			},
			SETEVENT {
				TASK_TYPE TASK;
				EVENT_TYPE EVENT;
			},
			COMCALLBACK {
				STRING CALLBACKROUTINENAME;
				MESSAGE_TYPE MESSAGE[];
			},
			FLAG {
				STRING FLAGNAME;
			}
		] NOTIFICATION = NONE;
	};

	COM {
		BOOLEAN COMERRORHOOK = FALSE;
		BOOLEAN COMUSEGETSERVICEID = FALSE;
		BOOLEAN COMUSEPARAMETERACCESS = FALSE;
		BOOLEAN COMSTARTCOMEXTENSION = FALSE;
		STRING COMAPPMODE[];
		ENUM [
			COMSTANDARD,
			COMEXTENDED
		] COMSTATUS = COMSTANDARD;
	};

	NM {
	};

};
