//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR HCS12 C/C++ Compiler V3.11A/W32                 17/Mar/2010  10:33:50 /
// Copyright 1997-2006 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Source file  =  C:\projekte\csProjects\k-os\src\Os_Error.c             /
//    Command line =  C:\projekte\csProjects\k-os\src\Os_Error.c             /
//                    --preprocess=l C:\projekte\csProjects\k-os\examples\Ex /
//                    01\IAR\Debug\List\ -lC C:\projekte\csProjects\k-os\exa /
//                    mples\Ex01\IAR\Debug\List\ -lB                         /
//                    C:\projekte\csProjects\k-os\examples\Ex01\IAR\Debug\Li /
//                    st\ --code_model=normal --double=32 -o                 /
//                    C:\projekte\csProjects\k-os\examples\Ex01\IAR\Debug\Ob /
//                    j\ --require_prototypes -e -z2 --no_cse --no_unroll    /
//                    --no_inline --no_code_motion --no_tbaa                 /
//                    --no_cross_call --debug "-D_DLIB_CONFIG_FILE=C:\Progra /
//                    mme\IAR Systems\Embedded Workbench Evaluation          /
//                    4.0\HCS12\LIB\DLIB\dlhcs12nfn.h" --segment             /
//                    __data8=DATA8 --segment __data16=DATA16 --segment      /
//                    __banked=BANKED_CODE --segment __non_banked=CODE       /
//                    --segment __intvec=INTVEC --segment __difunct=DIFUNCT  /
//                    --segment __cstack=CSTACK --segment __inittab=INITTAB  /
//                    -I C:\projekte\csProjects\k-os\inc\ -I                 /
//                    C:\projekte\csProjects\common\inc\ -I                  /
//                    C:\projekte\csProjects\common\ -I                      /
//                    C:\projekte\csProjects\common\InstallISR\ -I           /
//                    C:\projekte\csProjects\k-os\examples\Ex01\ -I          /
//                    C:\projekte\csProjects\common\drivers\include\cpu12\   /
//                    -I "C:\Programme\IAR Systems\Embedded Workbench        /
//                    Evaluation 4.0\HCS12\INC\" -I "C:\Programme\IAR        /
//                    Systems\Embedded Workbench Evaluation                  /
//                    4.0\HCS12\INC\DLIB\"                                   /
//    List file    =  C:\projekte\csProjects\k-os\examples\Ex01\IAR\Debug\Li /
//                    st\Os_Error.s12                                        /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME Os_Error

        RSEG CSTACK:DATA:REORDER:NOROOT(0)

        EXTERN ?cstart_init_zero

        PUBWEAK ?init?tab?DATA16_Z
        PUBLIC COMErrorCallErrorHook
        PUBLIC OSSaveServiceContext
        PUBLIC OsErrorCallErrorHook
        PUBLIC OsLastError
        PUBLIC Os_ServiceContext

        EXTERN OsFlags
        EXTERN OsCallevel
        EXTERN OsCallevelSaved
        EXTERN COMErrorHook
        EXTERN ErrorHook
        EXTERN ResumeOSInterrupts
        EXTERN SuspendOSInterrupts

// C:\projekte\csProjects\k-os\src\Os_Error.c
//    1 /*
//    2  * k_os (Konnex Operating-System based on the OSEK/VDX-Standard).
//    3  *
//    4  * (C) 2007-2009 by Christoph Schueler <chris@konnex-tools.de>
//    5  *
//    6  * All Rights Reserved
//    7  *
//    8  * This program is free software; you can redistribute it and/or modify
//    9  * it under the terms of the GNU General Public License as published by
//   10  * the Free Software Foundation; either version 2 of the License, or
//   11  * (at your option) any later version.
//   12  *
//   13  * This program is distributed in the hope that it will be useful,
//   14  * but WITHOUT ANY WARRANTY; without even the implied warranty of
//   15  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   16  * GNU General Public License for more details.
//   17  *
//   18  * You should have received a copy of the GNU General Public License along
//   19  * with this program; if not, write to the Free Software Foundation, Inc.,
//   20  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//   21  *
//   22  */
//   23 
//   24 #include "Os_Error.h"
//   25 
//   26 #if defined(OS_USE_GETSERVICEID) || defined(OS_USE_PARAMETERACCESS)

        RSEG DATA16_Z:DATA:REORDER:NOROOT(0)
        REQUIRE ?cstart_init_zero
//   27 Os_ServiceContextType Os_ServiceContext;
Os_ServiceContext:
        DS8 7
//   28 #endif
//   29 
//   30 #if defined(USE_ORTI)

        RSEG DATA16_Z:DATA:REORDER:NOROOT(0)
        REQUIRE ?cstart_init_zero
//   31 StatusType OsLastError=E_OK;
OsLastError:
        DS8 1
//   32 #define OS_SAVE_LAST_ERROR(Error)   OsLastError=Error
//   33 #else
//   34 #define OS_SAVE_LAST_ERROR(Error)
//   35 #endif
//   36 
//   37 

        RSEG CODE:CODE:REORDER:NOROOT(0)
//   38 void OsErrorCallErrorHook(StatusType Error)
OsErrorCallErrorHook:
//   39 {
        PSHA
        STAB    0x0,SP
//   40     if (((OsFlags & OS_SYS_FLAG_IN_OS_ERROR_HOOK)!=OS_SYS_FLAG_IN_OS_ERROR_HOOK)) {
        BRCLR   OsFlags,#0x4,??OsErrorCallErrorHook_0
        BRA     ??OsErrorCallErrorHook_1
//   41         DISABLE_ALL_OS_INTERRUPTS();
??OsErrorCallErrorHook_0:
        JSR     SuspendOSInterrupts
//   42         OsFlags|=OS_SYS_FLAG_IN_OS_ERROR_HOOK;
        LDAB    #0x4
        ORAB    OsFlags
        STAB    OsFlags
//   43         OS_SAVE_CALLEVEL(); /* s. 'os_alm' !!! */
        LDD     OsCallevel
        STD     OsCallevelSaved
//   44         OS_SET_CALLEVEL(OS_CL_ERROR_HOOK);
        LDD     #0x4
        STD     OsCallevel
//   45         OS_SAVE_LAST_ERROR(Error);
        LDAB    0x0,SP
        STAB    OsLastError
//   46         ErrorHook(Error);
        LDAB    0x0,SP
        JSR     ErrorHook
//   47         OS_RESTORE_CALLEVEL();
        LDD     OsCallevelSaved
        STD     OsCallevel
//   48         OsFlags&=~OS_SYS_FLAG_IN_OS_ERROR_HOOK;
        LDAB    #0xfb
        ANDB    OsFlags
        STAB    OsFlags
//   49         ENABLE_ALL_OS_INTERRUPTS();
        JSR     ResumeOSInterrupts
//   50     }    
//   51 }
??OsErrorCallErrorHook_1:
        PULA
        RTS
//   52 
//   53 

        RSEG CODE:CODE:REORDER:NOROOT(0)
//   54 void COMErrorCallErrorHook(StatusType Error)
COMErrorCallErrorHook:
//   55 {
        PSHA
        STAB    0x0,SP
//   56     if (((OsFlags & OS_SYS_FLAG_IN_COM_ERROR_HOOK)!=OS_SYS_FLAG_IN_COM_ERROR_HOOK)) {
        BRCLR   OsFlags,#0x8,??COMErrorCallErrorHook_0
        BRA     ??COMErrorCallErrorHook_1
//   57         DISABLE_ALL_OS_INTERRUPTS();
??COMErrorCallErrorHook_0:
        JSR     SuspendOSInterrupts
//   58         OsFlags|=OS_SYS_FLAG_IN_COM_ERROR_HOOK;
        LDAB    #0x8
        ORAB    OsFlags
        STAB    OsFlags
//   59         OS_SAVE_CALLEVEL();
        LDD     OsCallevel
        STD     OsCallevelSaved
//   60         OS_SET_CALLEVEL(OS_CL_ERROR_HOOK);
        LDD     #0x4
        STD     OsCallevel
//   61         OS_SAVE_LAST_ERROR(Error);
        LDAB    0x0,SP
        STAB    OsLastError
//   62         COMErrorHook(Error);
        LDAB    0x0,SP
        JSR     COMErrorHook
//   63         OS_RESTORE_CALLEVEL();
        LDD     OsCallevelSaved
        STD     OsCallevel
//   64         OsFlags&=~OS_SYS_FLAG_IN_COM_ERROR_HOOK;
        LDAB    #0xf7
        ANDB    OsFlags
        STAB    OsFlags
//   65         ENABLE_ALL_OS_INTERRUPTS();
        JSR     ResumeOSInterrupts
//   66     }    
//   67 }
??COMErrorCallErrorHook_1:
        PULA
        RTS
//   68 
//   69 
//   70 #if defined(OS_USE_GETSERVICEID) && defined(OS_USE_PARAMETERACCESS)

        RSEG CODE:CODE:REORDER:NOROOT(0)
//   71 void OSSaveServiceContext(Os_ServiceIdType id,void *param1,void *param2,void *param3)
OSSaveServiceContext:
//   72 {
        PSHX
        LEAS    -0x4,SP
        STY     0x0,SP
        STD     0x2,SP
        LDAB    0x8,SP
        LDY     0x9,SP
//   73         Os_ServiceContext.id=id;
        STAB    Os_ServiceContext
//   74         Os_ServiceContext.param1=param1;
        LDX     0x0,SP
        STX     Os_ServiceContext + 1
//   75         Os_ServiceContext.param2=param2;
        LDX     0x2,SP
        STX     Os_ServiceContext + 3
//   76         Os_ServiceContext.param3=param3;                       
        STY     Os_ServiceContext + 5
//   77 }
        LEAS    0x4,SP
        PULX
        RTS

        RSEG INITTAB:CODE:ROOT(0)
?init?tab?DATA16_Z:
        DC16    sfe(DATA16_Z) - sfb(DATA16_Z), sfb(DATA16_Z), sfb(DATA16_Z)

        END
//   78 #endif
//   79 
//   80 
//   81 #if defined(OS_USE_GETSERVICEID) && !defined(OS_USE_PARAMETERACCESS)
//   82 void OSSaveServiceContext(Os_ServiceIdType id)
//   83 {
//   84         Os_ServiceContext.id=id;                       
//   85 }
//   86 #endif
//   87 
//   88 
//   89 #if !defined(OS_USE_GETSERVICEID) && defined(OS_USE_PARAMETERACCESS)
//   90 void OSSaveServiceContext(void *param1,void *param2,void *param3)
//   91 {
//   92         Os_ServiceContext.param1=param1;
//   93         Os_ServiceContext.param2=param2;
//   94         Os_ServiceContext.param3=param3;                       
//   95 }
//   96 #endif
// 
// 155 bytes in segment CODE
//   8 bytes in segment DATA16_Z
//   6 bytes in segment INITTAB
// 
// 155 bytes of CODE memory (+ 6 bytes shared)
//   8 bytes of DATA memory
//
//Errors: none
//Warnings: 1
