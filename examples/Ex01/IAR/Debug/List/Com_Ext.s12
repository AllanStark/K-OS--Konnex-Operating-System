//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR HCS12 C/C++ Compiler V3.11A/W32                 17/Mar/2010  10:33:46 /
// Copyright 1997-2006 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Source file  =  C:\projekte\csProjects\k-os\src\Com_Ext.c              /
//    Command line =  C:\projekte\csProjects\k-os\src\Com_Ext.c              /
//                    --preprocess=l C:\projekte\csProjects\k-os\examples\Ex /
//                    01\IAR\Debug\List\ -lC C:\projekte\csProjects\k-os\exa /
//                    mples\Ex01\IAR\Debug\List\ -lB                         /
//                    C:\projekte\csProjects\k-os\examples\Ex01\IAR\Debug\Li /
//                    st\ --code_model=normal --double=32 -o                 /
//                    C:\projekte\csProjects\k-os\examples\Ex01\IAR\Debug\Ob /
//                    j\ --require_prototypes -e -z2 --no_cse --no_unroll    /
//                    --no_inline --no_code_motion --no_tbaa                 /
//                    --no_cross_call --debug "-D_DLIB_CONFIG_FILE=C:\Progra /
//                    mme\IAR Systems\Embedded Workbench Evaluation          /
//                    4.0\HCS12\LIB\DLIB\dlhcs12nfn.h" --segment             /
//                    __data8=DATA8 --segment __data16=DATA16 --segment      /
//                    __banked=BANKED_CODE --segment __non_banked=CODE       /
//                    --segment __intvec=INTVEC --segment __difunct=DIFUNCT  /
//                    --segment __cstack=CSTACK --segment __inittab=INITTAB  /
//                    -I C:\projekte\csProjects\k-os\inc\ -I                 /
//                    C:\projekte\csProjects\common\inc\ -I                  /
//                    C:\projekte\csProjects\common\ -I                      /
//                    C:\projekte\csProjects\common\InstallISR\ -I           /
//                    C:\projekte\csProjects\k-os\examples\Ex01\ -I          /
//                    C:\projekte\csProjects\common\drivers\include\cpu12\   /
//                    -I "C:\Programme\IAR Systems\Embedded Workbench        /
//                    Evaluation 4.0\HCS12\INC\" -I "C:\Programme\IAR        /
//                    Systems\Embedded Workbench Evaluation                  /
//                    4.0\HCS12\INC\DLIB\"                                   /
//    List file    =  C:\projekte\csProjects\k-os\examples\Ex01\IAR\Debug\Li /
//                    st\Com_Ext.s12                                         /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME Com_Ext

        RSEG CSTACK:DATA:REORDER:NOROOT(0)

        PUBLIC ComExt_Init
        PUBLIC ComExt_RxHandler
        PUBLIC ComExt_TimeoutHandler
        PUBLIC ComExt_TxHandler

// C:\projekte\csProjects\k-os\src\Com_Ext.c
//    1 /*
//    2  * k_os (Konnex Operating-System based on the OSEK/VDX-Standard).
//    3  *
//    4  * (C) 2007-2009 by Christoph Schueler <chris@konnex-tools.de,
//    5  *                                      cpu12.gems@googlemail.com>
//    6  *
//    7  * All Rights Reserved
//    8  *
//    9  * This program is free software; you can redistribute it and/or modify
//   10  * it under the terms of the GNU General Public License as published by
//   11  * the Free Software Foundation; either version 2 of the License, or
//   12  * (at your option) any later version.
//   13  *
//   14  * This program is distributed in the hope that it will be useful,
//   15  * but WITHOUT ANY WARRANTY; without even the implied warranty of
//   16  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//   17  * GNU General Public License for more details.
//   18  *
//   19  * You should have received a copy of the GNU General Public License along
//   20  * with this program; if not, write to the Free Software Foundation, Inc.,
//   21  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
//   22  *
//   23  */
//   24 
//   25 #include "Com_Ext.h"
//   26 
//   27 /*
//   28 • InitCOM and CloseCOM:
//   29     These service are used to initialise and release the platform specific
//   30     communication resources.
//   31 • StartCOM:
//   32     This service initialises internal COM data areas, calls message initialisation
//   33     routines and starts the OSEK communication module.
//   34 • StopCOM:
//   35     This is used to terminate a session of OSEK COM, release resources where
//   36     applicable.
//   37 • StopPeriodical and StartPeriodical :
//   38     These services start or stop the periodical transmission of all messages using
//   39     the periodical or the mixed transmission mode. It is sometimes useful to
//   40     suspend periodical activity without necessarily closing down the whole of
//   41     COM.
//   42 */
//   43 
//   44 /*
//   45 **
//   46 **    2.2.9.1 Definitions (Communication Deadline Monitoring).
//   47 **        - Start Timer: start of measurement of elapsed time.
//   48 **        - Timer Running: continuous measurement of elapsed time.
//   49 **        - Cancel Timer: stop measurement of elapsed time
//   50 **        - Time-out Interval : maximum time allowed for a particular monitored process
//   51 **        - Time-out: elapsed time has exceeded the time-out interval .
//   52 **
//   53 */
//   54 
//   55 /*
//   56 **
//   57 **  Naming for Layers: Interaction Layer (INL), Network Layer (NWL), Data Link Layer (DLL).
//   58 **
//   59 */
//   60 
//   61 /*
//   62     Interaction layer / Network layer interface
//   63     ===========================================
//   64     Interaction layer parameters    Network layer service parameters
//   65     ----------------------------------------------------------------
//   66     SymbolicName                    N_Handle
//   67     Recipients                      N_TA
//   68     Sender                          N_SA
//   69     BS_Value                        N_BS_Value  // Nur relevant f. 'ChangeProtocolParameters' - OSEK-COM 2.2
//   70     ST_Value                        N_ST_Value  // "                                                       "
//   71     Data                            N_User_Data
//   72     Length                          N_Length    // dynamic Messages.
//   73 */
//   74 
//   75 /*
//   76 **    A message shall be assigned to a unique set of sub-network frame addressing attributes (e.g.
//   77 **    ISO 15765-2, F_NORMAL addressing format : CAN identifier).
//   78 */
//   79 
//   80 static const uint8 ComExt_NodeAddr=(uint8)0x55;
//   81 
//   82 static void ComExt_Schedule(void);
//   83 static void ComExt_N_Task(void);
//   84 static void ComExt_DL_Task(void);
//   85 static void ComExt_I_Task(void);
//   86 
//   87 /*
//   88 **
//   89 **  Each  external Messagecan contain  a 'TestMessageValue()'-Function-Pointer,
//   90 **  pointing to a Fliter-Function.
//   91 **
//   92 */
//   93 
//   94 /*
//   95 **
//   96 ** Data-Link-Layer .
//   97 **
//   98 */
//   99 
//  100 
//  101 #if 0
//  102 StatusType D_UUData_req(<D_Handle>,<D_TA>,<D_User_Data>)
//  103 
//  104 StatusType D_UUData_con(<D_Handle>,D_TA,D_SA,<D_Result_UUDT>)
//  105 
//  106 StatusType D_UUData_ind(<D_Handle>,<D_SA>,<D_User_Data>,<D_Result_UUDT>)
//  107 
//  108 
//  109 /*
//  110 **
//  111 **  Network-Layer.
//  112 **
//  113 */
//  114 
//  115 StatusType N_USData_req(<N_Handle>,<N_TA>,<N_User_Data>,<N_Length>)
//  116 
//  117 StatusType N_USData_con(<N_Handle>,<N_TA>,<N_Result_USDT>)
//  118 
//  119 StatusType N_USData_ind(<N_Handle>,<N_SA>,<N_User_Data>,<N_Length>,<N_Result_USDT>)
//  120 
//  121 StatusType N_USData_FF_ind(<N_Handle>,<N_SA>,<N_Length>)
//  122 
//  123 StatusType N_ChangeParameter_req(<N_Handle>,<N_BS_Value>,<N_ST_Value>)
//  124 
//  125 StatusType N_ChangeParameter_con(<N_Handle>,<N_Result_ChangeParameter>)
//  126 #endif
//  127 

        RSEG CODE:CODE:REORDER:NOROOT(0)
//  128 void ComExt_Init(void)
ComExt_Init:
//  129 {
//  130 /*    Can_Init(); */
//  131 }
        RTS
//  132 
//  133 
//  134 void ComExt_Schedule(void)
//  135 {
//  136     FOREVER {
//  137         ComExt_I_Task();
//  138         ComExt_N_Task();
//  139         ComExt_DL_Task();
//  140     }
//  141 }
//  142 
//  143 void ComExt_I_Task(void)
//  144 {
//  145 
//  146 }
//  147 
//  148 
//  149 void ComExt_N_Task(void)
//  150 {
//  151 
//  152 }
//  153 
//  154 void ComExt_DL_Task(void)
//  155 {
//  156 
//  157 }
//  158 
//  159 
//  160 

        RSEG CODE:CODE:REORDER:NOROOT(0)
//  161 void ComExt_RxHandler(void)
ComExt_RxHandler:
//  162 {
//  163 
//  164 }
        RTS
//  165 
//  166 

        RSEG CODE:CODE:REORDER:NOROOT(0)
//  167 void ComExt_TxHandler(void)
ComExt_TxHandler:
//  168 {
//  169 
//  170 }
        RTS
//  171 

        RSEG CODE:CODE:REORDER:NOROOT(0)
//  172 void ComExt_TimeoutHandler(void)
ComExt_TimeoutHandler:
//  173 {
//  174 
//  175 }
        RTS

        END
// 
// 4 bytes in segment CODE
// 
// 4 bytes of CODE memory
//
//Errors: none
//Warnings: 3
